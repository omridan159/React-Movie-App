{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\MOVIE PROJEXT\\\\src\\\\components\\\\Home.js\";\nimport React, { useState } from \"react\";\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL, POPULAR_BASE_URL, SEARCH_BASE_URL } from \"../config\"; // import Components\n\nimport HeroImage from \"./elements/HeroImage\";\nimport SearchBar from \"./elements/SearchBar\";\nimport Grid from \"./elements/Grid\";\nimport MovieThumb from \"./elements/MovieThumb\";\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\";\nimport Spinner from \"./elements/Spinner\"; // Custom Hook\n\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\nimport NoImage from \"./images/no_image.jpg\";\n\nconst Home = () => {\n  const [{\n    state: {\n      movies,\n      currentPage,\n      totalPages,\n      heroImage\n    },\n    loading,\n    error\n  }, fetchMovies] = useHomeFetch();\n\n  const searchMovies = search => {\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n    setSearchTerm(search);\n    fetchMovies(endpoint);\n  };\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n    fetchMovies(endpoint);\n  };\n\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Something went wrong ...\");\n  if (!movies[0]) return /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !searchTerm && /*#__PURE__*/React.createElement(HeroImage, {\n    image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`,\n    title: heroImage.original_title,\n    text: heroImage.overview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    callback: searchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    header: searchTerm ? \"Search Reasult\" : \"Popular Movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))), loading && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }), currentPage < totalPages && !loading && /*#__PURE__*/React.createElement(LoadMoreBtn, {\n    text: \"Load More\",\n    callback: loadMoreMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/MOVIE PROJEXT/src/components/Home.js"],"names":["React","useState","POSTER_SIZE","BACKDROP_SIZE","IMAGE_BASE_URL","POPULAR_BASE_URL","SEARCH_BASE_URL","HeroImage","SearchBar","Grid","MovieThumb","LoadMoreBtn","Spinner","useHomeFetch","NoImage","Home","state","movies","currentPage","totalPages","heroImage","loading","error","fetchMovies","searchMovies","search","endpoint","setSearchTerm","loadMoreMovies","searchEndpoint","searchTerm","popularEndpoint","backdrop_path","original_title","overview","map","movie","id","poster_path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,WADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,gBAJF,EAKEC,eALF,QAMO,WANP,C,CAQA;;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CACJ;AACEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,WAAV;AAAuBC,MAAAA,UAAvB;AAAmCC,MAAAA;AAAnC,KADT;AAEEC,IAAAA,OAFF;AAGEC,IAAAA;AAHF,GADI,EAMJC,WANI,IAOFV,YAAY,EAPhB;;AAWA,QAAMW,YAAY,GAAIC,MAAD,IAAY;AAC/B,UAAMC,QAAQ,GAAGD,MAAM,GAAGnB,eAAe,GAAGmB,MAArB,GAA8BpB,gBAArD;AAEAsB,IAAAA,aAAa,CAACF,MAAD,CAAb;AACAF,IAAAA,WAAW,CAACG,QAAD,CAAX;AACD,GALD;;AAOA,QAAME,cAAc,GAAG,MAAM;AAC3B,UAAMC,cAAc,GAAI,GAAEvB,eAAgB,GAAEwB,UAAW,SACrDZ,WAAW,GAAG,CACf,EAFD;AAGA,UAAMa,eAAe,GAAI,GAAE1B,gBAAiB,SAAQa,WAAW,GAAG,CAAE,EAApE;AAEA,UAAMQ,QAAQ,GAAGI,UAAU,GAAGD,cAAH,GAAoBE,eAA/C;AAEAR,IAAAA,WAAW,CAACG,QAAD,CAAX;AACD,GATD;;AAWA,MAAIJ,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACX,MAAI,CAACL,MAAM,CAAC,CAAD,CAAX,EAAgB,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhB,sBACE,0CACG,CAACa,UAAD,iBACC,oBAAC,SAAD;AACE,IAAA,KAAK,EAAG,GAAE1B,cAAe,GAAED,aAAc,GAAEiB,SAAS,CAACY,aAAc,EADrE;AAEE,IAAA,KAAK,EAAEZ,SAAS,CAACa,cAFnB;AAGE,IAAA,IAAI,EAAEb,SAAS,CAACc,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEV,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEM,UAAU,GAAG,gBAAH,GAAsB,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,MAAM,CAACkB,GAAP,CAAYC,KAAD,iBACV,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,KAAK,EACHD,KAAK,CAACE,WAAN,GACK,GAAElC,cAAe,GAAEF,WAAY,GAAEkC,KAAK,CAACE,WAAY,EADxD,GAEIxB,OANR;AAQE,IAAA,OAAO,EAAEsB,KAAK,CAACC,EARjB;AASE,IAAA,SAAS,EAAED,KAAK,CAACH,cATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CATF,EAwBGZ,OAAO,iBAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBd,EAyBGH,WAAW,GAAGC,UAAd,IAA4B,CAACE,OAA7B,iBACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,QAAQ,EAAEO,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,CADF;AA+BD,CAhED;;AAkEA,eAAeb,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  POSTER_SIZE,\r\n  BACKDROP_SIZE,\r\n  IMAGE_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  SEARCH_BASE_URL,\r\n} from \"../config\";\r\n\r\n// import Components\r\nimport HeroImage from \"./elements/HeroImage\";\r\nimport SearchBar from \"./elements/SearchBar\";\r\nimport Grid from \"./elements/Grid\";\r\nimport MovieThumb from \"./elements/MovieThumb\";\r\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\";\r\nimport Spinner from \"./elements/Spinner\";\r\n\r\n// Custom Hook\r\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\r\n\r\nimport NoImage from \"./images/no_image.jpg\";\r\n\r\nconst Home = () => {\r\n  const [\r\n    {\r\n      state: { movies, currentPage, totalPages, heroImage },\r\n      loading,\r\n      error,\r\n    },\r\n    fetchMovies,\r\n  ] = useHomeFetch();\r\n\r\n\r\n\r\n  const searchMovies = (search) => {\r\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\r\n\r\n    setSearchTerm(search);\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  const loadMoreMovies = () => {\r\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${\r\n      currentPage + 1\r\n    }`;\r\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\r\n\r\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\r\n\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  if (error) return <div>Something went wrong ...</div>;\r\n  if (!movies[0]) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      {!searchTerm && (\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n          title={heroImage.original_title}\r\n          text={heroImage.overview}\r\n        />\r\n      )}\r\n      <SearchBar callback={searchMovies} />\r\n      <Grid header={searchTerm ? \"Search Reasult\" : \"Popular Movies\"}>\r\n        {movies.map((movie) => (\r\n          <MovieThumb\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n            movieName={movie.original_title}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {currentPage < totalPages && !loading && (\r\n        <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}